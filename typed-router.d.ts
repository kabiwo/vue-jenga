/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>, '//' | '//form/' | '//form/cascader/' | '//form/custom/' | '//form/date/' | '//form/empty/' | '//form/input/' | '//form/repeat/' | '//form/select/' | '//form/sub/' | '//form/tree/' | '//form/upload/' | '//menu/' | '//modal/' | '//modal/form/' | '//table/' | '//utils/conf/' | '//utils/confirm/' | '//utils/file/' | '//utils/generator/' | '//utils/init/' | '//utils/request/' | '//utils/resolver/' | '//utils/type/'>,
    '//': RouteRecordInfo<'//', '/', Record<never, never>, Record<never, never>>,
    '//form/': RouteRecordInfo<'//form/', '/form', Record<never, never>, Record<never, never>>,
    '//form/cascader/': RouteRecordInfo<'//form/cascader/', '/form/cascader', Record<never, never>, Record<never, never>>,
    '//form/custom/': RouteRecordInfo<'//form/custom/', '/form/custom', Record<never, never>, Record<never, never>>,
    '//form/date/': RouteRecordInfo<'//form/date/', '/form/date', Record<never, never>, Record<never, never>>,
    '//form/empty/': RouteRecordInfo<'//form/empty/', '/form/empty', Record<never, never>, Record<never, never>>,
    '//form/input/': RouteRecordInfo<'//form/input/', '/form/input', Record<never, never>, Record<never, never>>,
    '//form/repeat/': RouteRecordInfo<'//form/repeat/', '/form/repeat', Record<never, never>, Record<never, never>>,
    '//form/select/': RouteRecordInfo<'//form/select/', '/form/select', Record<never, never>, Record<never, never>>,
    '//form/sub/': RouteRecordInfo<'//form/sub/', '/form/sub', Record<never, never>, Record<never, never>>,
    '//form/tree/': RouteRecordInfo<'//form/tree/', '/form/tree', Record<never, never>, Record<never, never>>,
    '//form/upload/': RouteRecordInfo<'//form/upload/', '/form/upload', Record<never, never>, Record<never, never>>,
    '//menu/': RouteRecordInfo<'//menu/', '/menu', Record<never, never>, Record<never, never>>,
    '//modal/': RouteRecordInfo<'//modal/', '/modal', Record<never, never>, Record<never, never>>,
    '//modal/form/': RouteRecordInfo<'//modal/form/', '/modal/form', Record<never, never>, Record<never, never>>,
    '//table/': RouteRecordInfo<'//table/', '/table', Record<never, never>, Record<never, never>>,
    '//utils/conf/': RouteRecordInfo<'//utils/conf/', '/utils/conf', Record<never, never>, Record<never, never>>,
    '//utils/confirm/': RouteRecordInfo<'//utils/confirm/', '/utils/confirm', Record<never, never>, Record<never, never>>,
    '//utils/file/': RouteRecordInfo<'//utils/file/', '/utils/file', Record<never, never>, Record<never, never>>,
    '//utils/generator/': RouteRecordInfo<'//utils/generator/', '/utils/generator', Record<never, never>, Record<never, never>>,
    '//utils/init/': RouteRecordInfo<'//utils/init/', '/utils/init', Record<never, never>, Record<never, never>>,
    '//utils/request/': RouteRecordInfo<'//utils/request/', '/utils/request', Record<never, never>, Record<never, never>>,
    '//utils/resolver/': RouteRecordInfo<'//utils/resolver/', '/utils/resolver', Record<never, never>, Record<never, never>>,
    '//utils/type/': RouteRecordInfo<'//utils/type/', '/utils/type', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/views/index.vue': {
      routes: '/' | '//' | '//form/' | '//form/cascader/' | '//form/input/' | '//form/empty/' | '//form/custom/' | '//form/date/' | '//form/select/' | '//form/sub/' | '//form/repeat/' | '//form/upload/' | '//form/tree/' | '//modal/' | '//modal/form/' | '//menu/' | '//table/' | '//utils/conf/' | '//utils/confirm/' | '//utils/generator/' | '//utils/file/' | '//utils/init/' | '//utils/request/' | '//utils/resolver/' | '//utils/type/' | '//form/cascader' | '//utils/conf' | '//utils/confirm' | '//form/custom' | '//form/date' | '//form/empty' | '//utils/file' | '//form' | '//modal/form' | '//utils/generator' | '//utils/init' | '//form/input' | '//menu' | '//modal' | '//form/repeat' | '//utils/request' | '//utils/resolver' | '//form/select' | '//form/sub' | '//table' | '//form/tree' | '//utils/type' | '//form/upload' | '//utils'
      views: 'default'
    }
    'src/views/index/index.vue': {
      routes: '//'
      views: never
    }
    'src/views/index/form/index.vue': {
      routes: '//form/'
      views: never
    }
    'src/views/index/form/cascader/index.vue': {
      routes: '//form/cascader/'
      views: never
    }
    'src/views/index/form/custom/index.vue': {
      routes: '//form/custom/'
      views: never
    }
    'src/views/index/form/date/index.vue': {
      routes: '//form/date/'
      views: never
    }
    'src/views/index/form/empty/index.vue': {
      routes: '//form/empty/'
      views: never
    }
    'src/views/index/form/input/index.vue': {
      routes: '//form/input/'
      views: never
    }
    'src/views/index/form/repeat/index.vue': {
      routes: '//form/repeat/'
      views: never
    }
    'src/views/index/form/select/index.vue': {
      routes: '//form/select/'
      views: never
    }
    'src/views/index/form/sub/index.vue': {
      routes: '//form/sub/'
      views: never
    }
    'src/views/index/form/tree/index.vue': {
      routes: '//form/tree/'
      views: never
    }
    'src/views/index/form/upload/index.vue': {
      routes: '//form/upload/'
      views: never
    }
    'src/views/index/menu/index.vue': {
      routes: '//menu/'
      views: never
    }
    'src/views/index/modal/index.vue': {
      routes: '//modal/'
      views: never
    }
    'src/views/index/modal/form/index.vue': {
      routes: '//modal/form/'
      views: never
    }
    'src/views/index/table/index.vue': {
      routes: '//table/'
      views: never
    }
    'src/views/index/utils/conf/index.vue': {
      routes: '//utils/conf/'
      views: never
    }
    'src/views/index/utils/confirm/index.vue': {
      routes: '//utils/confirm/'
      views: never
    }
    'src/views/index/utils/file/index.vue': {
      routes: '//utils/file/'
      views: never
    }
    'src/views/index/utils/generator/index.vue': {
      routes: '//utils/generator/'
      views: never
    }
    'src/views/index/utils/init/index.vue': {
      routes: '//utils/init/'
      views: never
    }
    'src/views/index/utils/request/index.vue': {
      routes: '//utils/request/'
      views: never
    }
    'src/views/index/utils/resolver/index.vue': {
      routes: '//utils/resolver/'
      views: never
    }
    'src/views/index/utils/type/index.vue': {
      routes: '//utils/type/'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
